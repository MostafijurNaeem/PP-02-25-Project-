{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNqspm4VTEIE1RJPi0p0oxf",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/MostafijurNaeem/Python/blob/main/Use%20of%20Generator\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "L-bE9LSggKGK"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "source": [
        "# A basic generator example\n",
        "def number_generator():\n",
        "    for i in range(1, 4):\n",
        "        yield i\n",
        "\n",
        "# Create the generator\n",
        "gen = number_generator()\n",
        "\n",
        "# Get values from the generator\n",
        "print(next(gen))  # 1\n",
        "print(next(gen))  # 2\n",
        "print(next(gen))  # 3"
      ],
      "metadata": {
        "id": "dAmDg5e78Qk2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5a62052a-d90a-4f26-b9e8-8eb2f925e88d"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1\n",
            "2\n",
            "3\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def even_number_generator():\n",
        "    # Your code here\n",
        "    for i in range(1, 10):\n",
        "        if i % 2 == 0:\n",
        "            yield i\n",
        "\n",
        "gen = even_number_generator()\n",
        "print(next(gen))  # 2\n",
        "print(next(gen))  # 4"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OogOVlfighgD",
        "outputId": "9f35a4b5-d0c4-49bf-cd74-4026697c7592"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2\n",
            "4\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Generator expression for squares of numbers\n",
        "squares = (x**2 for x in range(1, 6))\n",
        "\n",
        "print(next(squares))\n",
        "print(next(squares))\n",
        "print(next(squares))\n",
        "print(next(squares))\n",
        "print(next(squares))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mCwAVTjHhv8O",
        "outputId": "47f253f3-b818-402d-d1b0-244b2db749ea"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1\n",
            "4\n",
            "9\n",
            "16\n",
            "25\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Your code here\n",
        "cubes = (x**3 for x in range(1, 100000000000))\n",
        "print(next(cubes))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LFUJKhJNiQpv",
        "outputId": "c22796ab-c639-45b0-a566-d9dbb91572c3"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1\n"
          ]
        }
      ]
    }
  ]
}